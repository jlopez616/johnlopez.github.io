{"version":3,"sources":["serviceWorker.js","ContentManager/HomePage.js","ContentManager/SignUp.js","ContentManager/AddTourBox.js","ContentManager/PopupBox.js","ContentManager/CMS/ContentBlock.js","ContentManager/CMS/GeneratePage.js","ContentManager/CMS/CMS.js","Views/PanelButton.js","ContentManager/ContentManager.js","Views/PanelList.js","Views/PanelView.js","Views/TourButton.js","Views/TourView.js","mockData.js","Views/MobileContainer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","HomePage","state","id","href","React","Component","SignUp","className","type","placeholder","src","addTour","class","this","props","name","description","PopupBox","handleSubmit","event","preventDefault","newBox","AddTourBox","setState","components","handleChange","console","log","currentTarget","value","bind","map","component","trigger","modal","close","onClick","onSubmit","onChange","style","width","minRows","maxRows","defaultValue","ContentBlock","handleClick","callback","generateStyle","data","color","contentStyle","drag","position","x","clientX","y","clientY","z","Object","assign","draggable","onDragEnd","string","GeneratePage","allowDrop","callbackFunction","editFunction","drop","onDragOver","onDrop","template","CMS","changeColor","newColor","childNodes","prevState","currentComponent","changeFont","newFont","changeSize","newSize","changeText","currentString","target","newComponent","setNewComponent","tag","forEach","each","toRemove","indexOf","toy","placeBack","index","view","textPage","viewPage","componentToEdit","onDragStart","dragData","PanelButton","sendData","sendDataBack","PanelList","callBackFunction","sendToMain","panels","panel","generateHTML","code","page","html","undefined","elementStyle","JSON","stringify","replace","contentType","ReactHtmlParser","TourList","tours","mockTours","TourButton","mockData","mockPanels","image","MobileContainer","changeToPanel","currentView","currentPanel","currentTour","changeToTours","changeToList","changeTour","toursToDisplay","number","push","PanelView","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35890a87.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nexport default class HomePage extends React.Component {\n    state = { \n    }\n    render () {                                   \n       return (\n         <div id='container'>\n            <a href=\"PopupBox\">PopupBox</a>\n            <a href=\"signup\" >Sign Up</a>\n         </div>\n       )\n    }\n }","import React, { Component } from 'react';\nimport Style from '../style.css'\nexport default class SignUp extends Component { \n  state = { \n  }\n  \n  render () {                                   \n      return (\n        <div id='signin'>\n            <h1>Ballona Discovery Park</h1>\n             <div id='signinContainer'>\n                  <form id='form'>       \n                      {/* <input className='input' type=\"text\"   \n                       placeholder=\"First Name\"/>\n                      <input className='input' type=\"text\"  \n                       placeholder=\"Last Name\"/>           */}\n                      <input className='input' type=\"text\"  \n                       placeholder=\"Username\"/>          \n                      <input className='input' type=\"password\" \n                       placeholder=\"Password\"/>\n                       {/* <a href=\"button\"><button id='submit'>Log-In to Your Park</button></a> */}\n                      <button id='submit'><a href=\"button\">Log-In to Your Park</a></button>\n                      \n                  </form>\n             </div>\n             <img id ='signinImage' src=\"https://playavista.com/shared/2016/02/PlayaVista_0923.jpg?x49818\" ></img>\n        </div>\n      )\n   }\n}","import React from 'react';\nclass addTour extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n        }\n    }\n    \n    render() {\n        return(\n            <div class=\"container\">\n                <div class=\"box2\">\n                    {this.props.name}\n                    <br/>\n                    <a href=\"toNextLevel\">{this.props.description}</a>\n                    {/* {this.props.description} */}\n                </div>\n            </div>\n            )\n    }\n}\n\n export default addTour;","import React from 'react';\nimport Popup from \"reactjs-popup\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport AddTourBox from './AddTourBox.js';\n\n\nclass PopupBox extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      components: [],\n      name : \"\", \n      description : \"\",\n      \n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleSubmit =  (event) => {\n    event.preventDefault();\n    const newBox =  <AddTourBox name={this.state.name} description={this.state.description}/>\n    this.setState({\n      components: [...this.state.components, newBox]\n    })\n\n\n  }\n\n  handleChange = (event) => {\n    console.log(event)\n    console.log(event.currentTarget)\n    console.log(event.currentTarget.name)\n    if (event.currentTarget.name === \"tourname\") {\n      this.setState({\n        name: event.currentTarget.value\n         \n      })\n    }\n    else {\n      this.setState({\n      description: event.currentTarget.value\n       \n    })\n    }\n    \n  }\n\n\n\n  render() {\n    return (\n      <div>\n        List of Tours\n        {this.state.components.map(component => component)}\n        <Popup trigger={<div><AddTourBox name = '+'/></div>} modal>\n          {close => (\n            <div className=\"modal\">\n              <a className=\"close\" onClick={close}>\n                &times;\n              </a>\n              <div className=\"header\"> Add a new Tour </div>\n              <div className=\"content\">\n                {\" \"}\n                <form onSubmit = {this.handleSubmit}> \n                  <label>\n                    Tour Name:{\"  \"}\n                    <input type=\"text\" name=\"tourname\" onChange = {this.handleChange}  /> \n                    \n                  </label>\n\n                  <br />\n                <label>\n                    Description:{\"  \"}\n                    <TextareaAutosize\n                      style={{width:300}}\n                      minRows={3}\n                      maxRows={6}\n                      defaultValue=\"Enter your description...\"\n\n                      name=\"description\"\n                      onChange = {this.handleChange}\n\n                    />\n                  </label>\n                  <br />\n                  <input type=\"submit\" value = \"Submit\" />\n                </form>\n\n                \n              </div>\n              <div className=\"actions\">\n              {/* <form onSubmit = {this.submitDescription}><input type=\"submit\" value=\"Submit\" /></form> */}\n              </div>\n            </div>\n          )}\n        </Popup>\n      </div>\n    )\n  }\n}\n\nexport default PopupBox; ","import React from \"react\";\n\nclass ContentBlock extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = Object.assign({}, this.props);\n        this.drag = this.drag.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n    }\n    handleClick = (event) => {\n        event.preventDefault();\n        this.props.callback(this)\n    }\n\n\n    generateStyle = (data) => {\n        let elementStyle = {\n            color: data.contentStyle.color,\n            'font-family': data.contentStyle['font-family'],\n            'font-size': data.contentStyle['font-size']\n        }\n       /* if (!this.props.template) {\n\n            elementStyle.position = 'absolute'\n            elementStyle.left =  this.state.position.x+ 'px'\n            elementStyle.top = this.state.position.y + 'px'\n        } */\n        return elementStyle\n    }\n\n    drag = (event) => {\n        \n\n      event.preventDefault();\n      //let newState = Object.assign({}, this.state);\n      //this.setState({}, newState)\n      this.setState({\n          position: {\n              x: event.clientX - 550,\n              y: event.clientY - 50,\n              z: 0\n          }\n      })\n    }\n\n\n\n\n\n    render(props) {\n        console.log(this.props.data)\n        return (\n            <div draggable=\"true\" onDragEnd={this.drag} onClick={this.handleClick}>\n                <p style = {this.generateStyle(this.props.data)}>\n                    {this.props.data.string}\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default ContentBlock;","import React, { useState, useCallback } from 'react'\nimport samplepage from '../../samplepage'\nimport ReactHtmlParser from 'react-html-parser'; \nimport ContentBlock from './ContentBlock';\n\nclass GeneratePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      components: [],\n    }\n    this.allowDrop = this.allowDrop.bind(this);\n    this.drop = this.drop.bind(this)\n  }\n\n\n\nallowDrop = (event) => {\n  event.preventDefault();\n}\n\ncallbackFunction = (data) => {\n  this.props.editFunction(data)\n}\n\n\ndrop = (event) => {\n  event.preventDefault();\n\n}\n\n\n  /*\n  samplepage.push({\n    id: samplepage.length,\n    data: {\n      tag: this.props.dragData.tag,\n      text: this.props.dragData.text,\n      contentStyle: this.props.dragData.contentStyle,\n      position: {\n        x: event.clientX - 408, //tochange\n        y: event.clientY,\n        z: this.props.dragData.position.z\n      }\n    }\n    });\n  this.setState({\n    currentPage: samplepage[samplepage.length-1] ///\n    }) \n  }*/\n\n\n\n //event.target.appendChild(document.getElementById(data));\nrender(props) {\n\n  return (\n\n\n    <div>\n      Page generator:\n      <div id=\"div1\" onDragOver={this.allowDrop} onDrop={this.drop}>\n        {\n          this.props.components.map(component => <ContentBlock data={component} callback={this.callbackFunction} template={false} />)}\n      \n      <br />\n      </div>\n    </div>\n  )\n}\n}\n\n\nexport default GeneratePage\n","import React from \"react\";\nimport \"./CMS.css\"\nimport GeneratePage from \"./GeneratePage\"\nimport ContentBlock from './ContentBlock';\n\n\n\nclass CMS extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            components: [],\n            view: \"text\",\n            newComponent: true,\n            currentComponent: {\n                tag: \"p\",\n                string: \"Change this text!\",\n                contentStyle: {\n                    color: \"black\",\n                    'font-family': \"Times New Roman\",\n                    'font-size': \"24px\"\n                },\n                id: 0,\n            },\n        }\n        this.view = \"text\"; //to delete soon\n\n        this.changeText = this.changeText.bind(this);\n        this.changeColor = this.changeColor.bind(this);\n        this.changeFont = this.changeFont.bind(this);\n        this.changeSize = this.changeSize.bind(this);\n        this.setNewComponent = this.setNewComponent.bind(this)\n        this.placeBack = this.placeBack.bind(this)\n        this.drag = this.drag.bind(this);\n        this.drop = this.drop.bind(this);\n    }\n    \n    changeColor = (event) => {\n        event.preventDefault();\n        let newColor = event.currentTarget.childNodes[0].childNodes[1].value;\n        this.setState(prevState => ({\n              currentComponent: {\n              ...prevState.currentComponent,           \n              contentStyle: {\n                  ...prevState.currentComponent.contentStyle,\n                  color: newColor\n              }\n            }                     \n        })\n    )}\n\n    changeFont = (event) => {\n        event.preventDefault();\n        let newFont = event.currentTarget.childNodes[0].childNodes[1].value;\n        this.setState(prevState => ({\n            currentComponent: {\n            ...prevState.currentComponent,           \n            contentStyle: {\n                ...prevState.currentComponent.contentStyle,\n                \"font-family\": newFont\n            }\n          }                     \n      })\n  )}\n\n    changeSize = (event) => {\n        event.preventDefault();\n        let newSize = event.currentTarget.childNodes[0].childNodes[1].value;\n        this.setState(prevState => ({\n            currentComponent: {\n            ...prevState.currentComponent,           \n            contentStyle: {\n                ...prevState.currentComponent.contentStyle,\n               \"font-size\": newSize\n            }\n          }                     \n      })\n  )}\n\n   changeText = (event) => {\n        event.preventDefault();\n        let currentString = event.target.value\n\n        this.setState(prevState => ({\n              currentComponent: {\n              ...prevState.currentComponent,           \n              string: currentString                \n              }\n            })\n          )\n \n    }\n\n     drag = (event) => {\n     //might need for future\n      }\n\n      drop = (event) => {\n        event.preventDefault();\n\n\n        this.setState( prevState => ({\n            components: [...this.state.components, this.state.currentComponent],\n            id: prevState.currentComponent.id++,\n            newComponent: true,\n          }))\n      }\n\n      setNewComponent = (event) => {\n          event.preventDefault();\n          this.setState({\n              newComponent: true,\n              currentComponent : {\n                tag: \"p\",\n                string: \"Change this text!\",\n                contentStyle: {\n                    color: \"black\",\n                    'font-family': \"Times New Roman\",\n                    'font-size': \"24px\"\n                },\n                id: 0,\n            }\n          })\n\n\n      }\n      \n      editFunction = (data) => {\n        this.state.components.forEach(each => {\n            if (each === data.state.data) {\n                let toRemove = this.state.components.indexOf(each);\n                let toy = this.state.components[toRemove];\n                this.setState({\n                    currentComponent: toy,\n                    newComponent: false\n                })\n            }\n        })\n      }\n      \n\n      placeBack = () => {\n          if (!this.state.newComponent) {\n              this.state.components.forEach(each => {\n\n                  if (each.id === this.state.currentComponent.id) {\n                      const index = this.state.components.indexOf(each);\n                      this.state.components[index] = this.state.currentComponent\n                  }\n              })\n        }\n      }\n             \n    render() {\n        this.placeBack();\n\n        const textPage = \n        <div className=\"dropdown\">\n        <form >\n        <label>Edit Text:\n            <input type=\"text\" value={this.state.currentComponent.string}  onChange={this.changeText}/>\n        </label>\n        </form>\n        <form onSubmit = {this.changeColor}>\n            <label>Text Color:\n            <input type=\"text\" />\n            <button type=\"submit\">Submit </button>\n            </label>\n        </form>\n        <form onSubmit = {this.changeFont}>\n            <label>Change Font:\n            <input type=\"text\" />\n            <button type=\"submit\">Submit </button>\n            </label>\n        </form>\n        <form onSubmit = {this.changeSize}>\n            <label>Change Text Size:\n            <input type=\"text\" />\n            <button type=\"submit\">Submit </button>\n            </label>\n        </form>\n        </div>\n\n        const imgPage = \n        <div className=\"dropdown\">\n            Features will be added soon?\n        </div>\n\n        let viewPage = textPage;\n\n\n\n        /*if (this.view === \"text\") {\n            viewPage = textPage;\n        } else {\n            viewPage = imgPage;\n            this.addContent({data: {\n                tag: \"img src=\",\n                text: \"https://myfirstshiba.com/wp-content/uploads/2016/01/dreamstime_xs_34451740.jpg\"\n            }})\n        } */\n\n      /*  let sampleData = {\n            id: 0,\n            data: {\n              tag: \"p\",\n              text: \"Hello world\",\n              contentStyle: {\n                  color: \"red\",\n                  'font-family': \"Comic sans ms\",\n                  'font-size': 24\n              },\n              position: {\n                x: 300,\n                y: 300,\n                z: 1,\n              }\n            }\n        }\n        */\n\n       let componentToEdit = <ContentBlock data={this.state.currentComponent} template={true} />\n\n\n        return (\n            <div className=\"grid-container\">\n                <div className=\"result\" draggable=\"true\"  onDragStart={this.drag} onDragEnd={this.drop} >\n                    {componentToEdit}\n                \n                {/*\n                {ReactHtmlParser (this.generateHTML(this.state))}\n                 <button onClick={this.changeType(\"text\")}>Text</button>\n                <button onClick={this.changeType(\"img\")}>Image</button> */}\n                </div>\n                <div className=\"buttonBar\">\n                    <p>Buttons to go here</p>\n                    <form onSubmit ={this.setNewComponent}>\n                    <button type=\"Submit\">New Component</button>\n                    </form>\n                </div>\n                    {viewPage}\n                <div className=\"preview\">\n                    <GeneratePage dragData={this.state} editFunction={this.editFunction}\n                    components={this.state.components}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CMS;","import React from \"react\";\nimport './PanelButton.css'\n\nclass PanelButton extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    sendData = (event) => {\n        event.preventDefault();\n        this.props.sendDataBack(this.props.data)\n    }\n\n\n\n\n\n    render(props) {\n        return (\n            <div className=\"panelButton\" onClick={this.sendData}>\n               {this.props.data.name}\n            </div>\n        )\n    }\n}\n\nexport default PanelButton;","import React from 'react';\t\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport HomePage from '../ContentManager/HomePage';\nimport SignUp from '../ContentManager/SignUp';\nimport '../App.css';\nimport PopupBox from '../ContentManager/PopupBox';\nimport '../style.css'\nimport CMS from './CMS/CMS'\n// import Panels from './AllPanels'\n// import TourPanels from './TourPanels'\n// import CMS from './CMS/CMS';\n\nclass ContentManager extends React.Component {\n  render() {\n      return (\n        // <div>\n        // {/* <Panels /> */}\n        // {/* <TourPanels /> */}\n        // </div>\n        <BrowserRouter>\n        <div>\n          <Route exact={true} path='/' render={() => (\n            <div className=\"App\">\n              <SignUp />\n            </div>\n          )}/>\n          <Route exact={true} path='/PopupBox' render={() => (\n            <div className=\"App\">\n              <PopupBox />\n            </div>\n          )}/>\n          <Route exact={true} path='/signup' render={() => (\n            <div className=\"App\">\n              <SignUp />\n            </div>\n          )}/>\n          <Route exact={true} path='/button' render={() => (\n            <div className=\"App\">\n              <HomePage />\n            </div>\n          )}/>\n          \n          <Route exact={true} path='/toNextLevel' render={() => (\n            <div className=\"App\">\n                <CMS />\n              \n            </div>\n          )}/>\n        </div>\n      </BrowserRouter>\n      )    \n  }\n}\nexport default ContentManager;\n\n\n\n","import React from \"react\";\nimport PanelButton from './PanelButton'\n\n\nclass PanelList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            panels: this.props.data,\n        }\n    }\n\n    callBackFunction = (data) => {\n        this.props.sendToMain(data)\n    }\n\n    \n\n\n\n    render(props) {\n\n\n        return (\n            <div className=\"PanelList\">\n             {this.state.panels.map(panel => <PanelButton data={panel} sendDataBack={this.callBackFunction}/>)}\n            </div>\n            \n        )\n    }\n}\n\nexport default PanelList;","import React from \"react\";\nimport PanelButton from './PanelButton'\nimport PanelView from './PanelView'\nimport ReactHtmlParser from 'react-html-parser'; \nimport './PageView.css'\n      \n      \nclass PanelList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            page: this.props.data,\n        }\n        this.generateHTML = this.generateHTML.bind(this)\n    }\n\n\n    generateHTML = () => {\n        let code = ``;\n        this.state.page.html.forEach((component) => {\n            if (component.contentStyle != undefined) {\n            let elementStyle = JSON.stringify(component.contentStyle).replace(/['\"{}]+/g, '').replace(/[,]+/g, ';') + \";\";\n            elementStyle = elementStyle + `position: absolute; top: ${component.position.y}px; left: ${component.position.x}px;`\n            code = code + `<${component.tag} id= \"component${component.id}\"style=\"${elementStyle}\">${component.string}</${component.contentType}\n            <br>`;\n            }\n        } ) \n        return code;\n    }\n\n\n\n\n\n    render(props) {\n\n        return (\n            <div className=\"page\">\n\n                <div className=\"pageContainer\">\n                    <div> {ReactHtmlParser (this.generateHTML())}</div>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default PanelList;","import React from \"react\";\nimport './PanelButton.css'\n\nclass PanelButton extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    sendData = (event) => {\n        event.preventDefault();\n        this.props.sendDataBack(this.props.data)\n    }\n\n    \n\n\n\n    render(props) {\n        return (\n            <div className=\"panelButton\" onClick={this.sendData}>\n               {this.props.data.name}\n            </div>\n        )\n    }\n}\n\nexport default PanelButton;","import React from \"react\";\nimport PanelButton from './PanelButton'\nimport PanelView from './PanelView'\nimport TourButton from './TourButton'\n\n\n\nclass TourList extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tours: this.props.data.mockTours,\n        }\n    }\n\n    callBackFunction = (data) => {\n        this.props.sendToMain(data)\n    }\n\n    render(props) {\n\n\n        return (\n            <div className=\"TourList\">\n             {this.state.tours.map(panel => <TourButton data={panel} sendDataBack={this.callBackFunction}/>)}\n            </div>\n            \n        )\n    }\n}\n\nexport default TourList;","const mockData = {\n    mockTours: [{\n        id: 1,\n        name: \"Dr. Johnson's 401 Demonstration\"\n    },\n    {\n        id: 2,\n        name: \"History of the Ballona Wetlands\"\n    }],\n    mockPanels : [{\n        name: \"All About Egrets\",\n        tours: [1, 2],\n        image: undefined,\n        html: [\n            {\n                    tag: \"p\",\n                    string: \"All About Egrets\",\n                    contentStyle: {\n                        color: \"black\",\n                        'font-family': \"Impact\",\n                        'font-size': \"24px\"\n                    },\n                    id: 1,\n                    position: {\n                        x: 100,\n                        y: 10,\n                        z: 1,\n                    }\n            },\n            {\n                tag: \"p\",\n                string: \"It's a type of bird!\",\n                contentStyle: {\n                    color: \"black\",\n                    'font-family': \"Arial\",\n                    'font-size': \"12px\"\n                },\n                id: 2,\n                position: {\n                    x: 200,\n                    y: 100,\n                    z: 1,\n                }\n            },\n            {\n                tag: \"p\",\n                string: \"What is an egret?\",\n                contentStyle: {\n                    color: \"black\",\n                    'font-family': \"Arial\",\n                    'font-size': \"12px\"\n                },\n                id: 3,\n                position: {\n                    x: 0,\n                    y: 100,\n                    z: 1,\n                }\n            }]\n    },\n    {\n        name: \"The Water Cycle\",\n        tours: [1],\n        image: undefined,\n        html: undefined,\n    },\n    {\n        name: \"Loyola Marymount University\",\n        tours: [2],\n        image: undefined,\n        html: undefined, \n    }]\n}\nexport default mockData","import React from \"react\";\nimport PanelButton from './PanelButton'\nimport PanelView from './PanelView'\nimport PanelList from './PanelList'\nimport TourList from './TourView'\n//import './MobileContainer.css' //TO DO: Get Style to Correctly Work\nimport mockData from '../mockData'\nimport { tsConstructorType } from \"@babel/types\";\n\n\nclass MobileContainer extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            currentPanel: undefined,\n            currentView: \"tourView\",\n            currentTour: undefined,\n        }\n        this.changeToPanel = this.changeToPanel.bind(this)\n        this.changeToTours = this.changeToTours.bind(this)\n        this.changeToList = this.changeToList.bind(this)\n    }\n\n\n    changeToPanel = (data) => {\n        this.setState(prevState => ({\n            currentView: \"panelView\",\n            currentPanel: data,\n            currentTour: prevState.currentTour\n        }))\n    \n    }\n\n    changeToTours= () => {\n        this.setState({\n            currentView: \"tourView\",\n            currentPanel: undefined,\n            currentTour: undefined,\n        })\n    }\n\n    changeToList = (data) => {\n        let changeTour;\n        if (this.state.currentTour === undefined) {\n            changeTour = data.id\n        } else {\n            changeTour = this.state.currentTour\n        }\n        this.setState({\n            currentView: \"listView\",\n            currentPanel: undefined,\n            currentTour: changeTour\n        })\n    }\n\n\n\n    render(props) {\n        let currentView;\n\n        if (this.state.currentView === \"listView\") {\n          let toursToDisplay  = [];\n          mockData.mockPanels.forEach(each => {\n              \n              each.tours.forEach(number => {\n                  if (number === this.state.currentTour) {\n                      toursToDisplay.push(each)\n                  }\n              })\n          })\n           currentView = \n            <div className=\"PanelList\">\n            <PanelList data = {toursToDisplay} sendToMain={this.changeToPanel}/>\n            <button onClick={this.changeToTours}> Return to List of Tours</button>\n            </div> \n\n        } else if (this.state.currentView === \"panelView\") {\n            currentView =\n            <div>\n            {<PanelView data = {this.state.currentPanel} />}\n            <button onClick={this.changeToList}> Return to List of Panels</button>\n            </div>\n        } else {\n            currentView =           \n            <div>\n            {<TourList data = {mockData} sendToMain = {this.changeToList} />}\n             </div>\n        }\n\n        return (\n            <div>\n            {currentView}\n            </div>\n            \n        )\n    }\n}\n\nexport default MobileContainer;","import React from 'react';\t\nimport './App.css';\nimport './style.css'\nimport ContentManager from './ContentManager/ContentManager'\nimport PanelList from './Views/PanelList'\nimport MobileContainer from './Views/MobileContainer'\n// import Panels from './AllPanels'\n// import TourPanels from './TourPanels'\n// import CMS from './CMS/CMS';\n\nclass App extends React.Component {\n  render() {\n      return (\n        <MobileContainer />\n      )    \n  }\n}\nexport default App;\n\n\n\n","import React from 'react';\t\nimport ReactDOM from 'react-dom';\t\nimport './index.css';\t\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(<div> <App /></div>, document.getElementById('root'));\t\t\n// ReactDOM.render(<div> <CMS /> </div>, document.getElementById('root'));\t\t\n\n// If you want your app to work offline and load faster, you can change\t\n// unregister() to register() below. Note this comes with some pitfalls.\t\n// Learn more about service workers: https://bit.ly/CRA-PWA\t\nserviceWorker.unregister();\t\n"],"sourceRoot":""}